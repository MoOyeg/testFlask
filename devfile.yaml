schemaVersion: 2.2.0
metadata:
  description: Python is an interpreted, object-oriented, high-level programming language
    with dynamic semantics. Its high-level built in data structures, combined with
    dynamic typing and dynamic binding, make it very attractive for Rapid Application
    Development, as well as for use as a scripting or glue language to connect existing
    components together.
  provider: Red Hat
  tags:
  - Python
  - Pip
  - Flask
  version: 3.0.0
  displayName: Python
  icon: https://raw.githubusercontent.com/devfile-samples/devfile-stack-icons/main/python.svg
  language: Python
  name: testflask
  projectType: Python
variables:
  RESOURCE_NAME: testflask
  APPLICATION_PORT: "8080"
  DEBUG_PORT: "5000"
  PYTHON_IMAGE: "registry.access.redhat.com/ubi9/python-39:latest"
  APP_CONFIG: "./gunicorn/gunicorn.conf.py"
  APP_MODULE: "runapp:app" 
  REMOTE_DEBUG: "true"
commands:
- id: install-python-requirements
  exec:
    component: python-39
    commandLine: pip install -r requirements.txt
    group:
      kind: build
    workingDir: ${PROJECT_SOURCE}   
- id: debug-setup
  composite:
    commands:
      - install-python-requirements
    group:
      kind: build
      isDefault: true
    parallel: true
- id: run-application-via-entry-script
  exec:
    #commandLine: /bin/bash -c "./runapp.sh"
    commandLine: echo "here22" && sleep infinity
    hotReloadCapable: true
    component: python-39
    group:
      kind: run
      isDefault: true
    workingDir: ${PROJECT_SOURCE}
- id: debug-application-via-entry-script
  exec:
    #commandLine: python -m debugpy --listen 0.0.0.0:${DEBUG_PORT} runapp.py
    commandLine: echo "here" && sleep infinity
    component: python-39
    hotReloadCapable: true
    group:
      kind: debug
      isDefault: true
    workingDir: ${PROJECT_SOURCE}
components:
- name: python-39
  container:
    args:
    - tail
    - -f
    - /dev/null
    endpoints:
    - name: http-python
      targetPort: 5000
      exposure: public
    - name: debug
      targetPort: 5679
    env:
    - name: DEBUG_PORT
      value: "{{DEBUG_PORT}}"
    - name: APP_MODULE
      value: "{{APP_MODULE}}"
    - name: APP_CONFIG
      value: "{{APP_CONFIG}}"
    - name: ODO_DEBUG
      value: "true"
    - name: MYSQL_DATABASE
      value: testdb
    - name: MYSQL_USER
      value: user
    - name: MYSQL_PASSWORD
      value: pass
    - name: MYSQL_HOST
      value: mysql
    image: "{{PYTHON_IMAGE}}"
    mountSources: true  
- name: route-url
  openshift:
    inlined: |
      apiVersion: route.openshift.io/v1
      kind: Route
      metadata:
        name: {{RESOURCE_NAME}}
      spec:
        path: /
        to:
          kind: Service
          name: {{RESOURCE_NAME}}-app
        port:
          targetPort: {{APPLICATION_PORT}}



